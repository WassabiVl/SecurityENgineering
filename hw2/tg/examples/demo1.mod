(* ----------------------------------------------------------------------------

  -- University of Stuttgart, Germany
  -- Computer Science, Software Engineering Dept.
  -----------------------------------------------

  -- Test Driver Source

  -- File:       c:\users\wassabi.vl\desktop\uni\securityengineering\hw2\tg\examples\demo1.mod
  -- Script:     c:\users\wassabi.vl\desktop\uni\securityengineering\hw2\tg\examples\demo1.ts

  -- ******************************************************************
  -- * This file was automatically generated by the `tg' program.     *
  -- * Modifications should be made in the corresponding script file. *
  -- ******************************************************************

---------------------------------------------------------------------------- *)

MODULE C:\Users\wassabi.vl\Desktop\uni\SecurityENgineering\hw2\tg\examples\demo1;

FROM InOut IMPORT WriteLn, WriteString;
PROCEDURE Subject(X: CARDINAL): CARDINAL;
BEGIN RETURN X*X; END Subject;

    (* Global Data *)
    VAR
      Fail_Result           : BOOLEAN;
      Unexpected_Error      : BOOLEAN;
      (* Data of last Test Case *)
      Test_Case_Passed      : BOOLEAN;
    (* Access Routines *)

  (* Global definitions from script *)
  VAR
  GlobVar: INTEGER;



  PROCEDURE Code_Section1;
  BEGIN
    WriteString("Am Anfang"); WriteLn;
    GlobVar := 0;
  END Code_Section1;

  (* Test Case (1)   (1) X = 1*)
  PROCEDURE Test_Case1();
  VAR
    Result : CARDINAL;
  BEGIN
    WriteString ("(1)  (1) X = 1"); WriteLn;
    (* part prepare part *)
      Result := 0;

    (* test part *)
      Result := Subject(1);  (* erster Test *)
      GlobVar := 1;
    (* result part *)
      Test_Case_Passed := TRUE;
      IF Result = 1 THEN
        WriteString ("      ...pass."); WriteLn;
        WriteString ("         (predicate is TRUE)"); WriteLn;
      ELSE
        Test_Case_Passed := FALSE;
        Fail_Result := TRUE;
        WriteString ("      ...FAIL."); WriteLn;
        WriteString ("         (predicate is FALSE)"); WriteLn;
      END;
  END Test_Case1;

  (* Test Case (2)   (2) X = 2*)
  PROCEDURE Test_Case2();
  VAR
    Result : CARDINAL;
  BEGIN
    WriteString ("(2)  (2) X = 2"); WriteLn;
    (* test part *)
      Result := Subject(2);
    (* result part *)
      Test_Case_Passed := TRUE;
      IF (Result = 4) AND (GlobVar=1) THEN
        WriteString ("      ...pass."); WriteLn;
        WriteString ("         (predicate is TRUE)"); WriteLn;
      ELSE
        Test_Case_Passed := FALSE;
        Fail_Result := TRUE;
        WriteString ("      ...FAIL."); WriteLn;
        WriteString ("         (predicate is FALSE)"); WriteLn;
      END;
  END Test_Case2;

  PROCEDURE Code_Section2;
  BEGIN
    WriteString("Hallo");
    WriteLn;	
      GlobVar := 2;
  END Code_Section2;

  (* Test Case (3)   (3) X = 3*)
  PROCEDURE Test_Case3();
  VAR
    Result : CARDINAL;    (* zweiter Test *)
  BEGIN
    WriteString ("(3)  (3) X = 3"); WriteLn;
    (* part prepare part *)
      GlobVar := 3;        (* dritter Test *)

    (* test part *)
      Result := Subject(3);
    (* result part *)
      Test_Case_Passed := TRUE;
      IF (Result = 9) AND (GlobVar = 3) THEN
        WriteString ("      ...pass."); WriteLn;
        WriteString ("         (predicate is TRUE)"); WriteLn;
      ELSE
        Test_Case_Passed := FALSE;
        Fail_Result := TRUE;
        WriteString ("      ...FAIL."); WriteLn;
        WriteString ("         (predicate is FALSE)"); WriteLn;
      END;
  END Test_Case3;

  PROCEDURE Code_Section3;
  BEGIN
    WriteString("Am Ende");
    WriteLn;
  END Code_Section3;

BEGIN
  Fail_Result := FALSE;
  Unexpected_Error := FALSE;
  Test_Case_Passed := FALSE;
  Code_Section1();
  Test_Case1();
  Test_Case2();
  Code_Section2();
  Test_Case3();
  Code_Section3();
  WriteLn;
  WriteString ("Total test result: ");
  IF Fail_Result THEN
    WriteString ("FAIL");
  ELSE
    WriteString ("pass");
  END;
  WriteString ("."); WriteLn;
  WriteLn;

END C:\Users\wassabi.vl\Desktop\uni\SecurityENgineering\hw2\tg\examples\demo1.
